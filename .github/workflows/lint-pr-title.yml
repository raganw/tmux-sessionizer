name: Lint PR Title

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  lint-pr-title:
    name: Lint PR Title
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install @commitlint/cli @commitlint/config-conventional

      - name: Lint PR title
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          echo "Linting PR title: $PR_TITLE"
          echo "$PR_TITLE" | npx commitlint --config commitlint.config.js

      - name: Comment on PR if title is invalid
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const prTitle = context.payload.pull_request.title;
            
            const comment = `## ‚ùå PR Title Does Not Follow Conventional Commit Format

Your PR title \`${prTitle}\` does not follow the [Conventional Commits](https://www.conventionalcommits.org/) specification.

### Expected Format:
\`\`\`
<type>[optional scope]: <description>
\`\`\`

### Valid Types:
- \`feat:\` - A new feature
- \`fix:\` - A bug fix
- \`docs:\` - Documentation only changes
- \`style:\` - Changes that do not affect the meaning of the code
- \`refactor:\` - A code change that neither fixes a bug nor adds a feature
- \`perf:\` - A code change that improves performance
- \`test:\` - Adding missing tests or correcting existing tests
- \`chore:\` - Changes to the build process or auxiliary tools
- \`ci:\` - Changes to CI configuration files and scripts
- \`build:\` - Changes that affect the build system or external dependencies

### Examples:
- \`feat: add fuzzy finding for project selection\`
- \`fix: resolve session creation bug\`
- \`docs: update installation instructions\`
- \`chore: update dependencies\`

Please update your PR title to follow this format.`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });